environment:
  matrix:
  - TARGET: i686-pc-windows-gnu
    MINGW_URL: https://sourceforge.net/projects/mingw-w64/files/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/4.9.2/threads-win32/dwarf/i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z/download
    MINGW_ARCHIVE: i686-4.9.2-release-win32-dwarf-rt_v4-rev4.7z
    MINGW_DIR: mingw32
  - TARGET: x86_64-pc-windows-gnu
    MSYS_BITS: 64
  - TARGET: i686-pc-windows-msvc
  - TARGET: x86_64-pc-windows-msvc

install:
  # Install rust, x86_64-pc-windows-msvc host
  - curl -sSf -o rustup-init.exe https://win.rustup.rs/
  - rustup-init.exe -y
  - set PATH=%PATH%;C:\Users\appveyor\.cargo\bin
  - rustup update beta-x86_64-pc-windows-msvc
  - rustup default beta-x86_64-pc-windows-msvc

  # Install the target we're compiling for
  - if NOT "%TARGET%" == "x86_64-pc-windows-msvc" rustup target add %TARGET%

  # Use the system msys if we can
  - if defined MSYS_BITS set PATH=C:\msys64\mingw%MSYS_BITS%\bin;C:\msys64\usr\bin;%PATH%

  # download a custom compiler otherwise
  - if defined MINGW_ARCHIVE appveyor DownloadFile "%MINGW_URL%" -FileName "%MINGW_ARCHIVE%"
  - if defined MINGW_ARCHIVE 7z x -y "%MINGW_ARCHIVE%" > nul
  - if defined MINGW_ARCHIVE set PATH=%CD%\%MINGW_DIR%\bin;C:\msys64\usr\bin;%PATH%

  # let's see what we got
  - where gcc rustc cargo
  - rustc -vV
  - cargo -vV
  - set CARGO_TARGET_DIR=%CD%\target

build: false

test_script:
  - cargo test --target %TARGET%
  - cargo run --manifest-path systest/Cargo.toml --target %TARGET%
